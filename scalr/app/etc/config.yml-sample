# Scalr\System\Config\Extension class describes the 
# structure of this config and defines default values.
# If you add/delete values in this config, mentioned class should be updated accordingly.
scalr:
  connections:
    mysql: &connections_mysql
      host: 'localhost'
      port: ~
      name: scalr
      user: scalr
      pass: 'scalr'
#    mongodb: &connections_mongo
#      driver: mongodb
#      host: 'localhost'
#      port: 27017
#      name: 'db'
#    ldap:
#      host: 'localhost'
#      port: ~
#      base_dn: 'DC=scalr,DC=local'
#      # user and password are preferred parameters but not a mandatory
#      user: 'scalradmin@scalr'
#      pass: 'set password'
#      
#  email:
#    # Default value: null
#    address: ~
#    # Default value: null
#    name: ~   
#      
#  auditlog:
#    # Disabled by default. Default: false
#    enabled: false
#    # Valid values: mysql | mongodb
#    storage: mysql
#    connections:
#      mysql: 
#        <<: *connections_mysql
#      mongodb:
#        <<: *connections_mongo
#        collection: 'auditlog'
#        
#  cloudyn:
#    master_email: ''
#    # Allowed values: DEV | ITG | QA | PROD Default: PROD
#    environment: PROD
  ui:
    support_url: 'https://groups.google.com/d/forum/scalr-discuss'
    wiki_url: 'http://wiki.scalr.com'
  
# must be defined  
  pma_instance_ip_address: '127.0.0.1'
# Allowed values: scalr | ldap 
  auth_mode: scalr
#  # Allowed values: PROD | DEV. Default: PROD  
#  environment: PROD   
  # Allowed values: public | local | auto. 
  instances_connection_policy: public
  # By default it's allowed all avalialbe
  allowed_clouds: 
   - ec2
   - openstack
   - cloudstack
   - idcf
   - gce
   - eucalyptus
   - rackspace
   - rackspacenguk
   - rackspacengus
#   - nimbula
#  # Default value: 300 seconds
#  rss_cache_lifetime: 300
  
  endpoint:
#    # Devault value: http
#    scheme: http
    host: 'endpoint url here'    

  aws:
    security_group_name: 'scalr.ip-pool'
    # IP Addresses of servers where scalr installed
    # for example ['111.22.33.11/28', '222.22.2.12/28']
    ip_pool: ['8.8.8.8'] 
    # default value: 'scalr.'
    security_group_prefix: 'scalr.'
    
  billing:
    enabled: no
    chargify_api_key: ''
    chargify_domain: ''
    emergency_phone_number: ''
      
  dns:
    mysql:
      host: 'localhost'
      port: ~
      name: 'scalr'
      user: 'scalr'
      pass: 'scalr'
    static:
      enabled: no
      nameservers: ['ns1.example-dns.net', 'ns2.example-dns.net']
      domain_name: 'example-dns.net'
    global:
      enabled: no
      nameservers: ['ns1.example.net', 'ns2.example.net', 'ns3.example.net', 'ns4.example.net']
      # base_domain is used for automated generation domain name of the user's servers 
      default_domain_name: 'provide.domain.here.in'

  msg_sender:
    connections: 
      mysql:
        <<: *connections_mysql
        driver: 'mysql+pymysql'
        pool_recycle: 120
        pool_size: 10
    pool_size: 50
    log_file: "/var/log/scalr.messaging.log"
    pid_file: "/var/run/scalr.messaging.pid"

  stats_poller:
    connections: 
      mysql:
        <<: *connections_mysql
        driver: 'mysql+pymysql'
        pool_recycle: 120
        pool_size: 4
    metrics: ['cpu', 'la', 'mem', 'net']
    farm_procs: 2
    serv_thrds: 100
    rrd_thrds: 2
    rrd_db_dir: '/tmp/rrd_db_dir'
    images_path: '/var/www/graphics'
    graphics_url: 'http://example.com/graphics'
    log_file: '/var/log/scalr.stats-poller.log'
    pid_file: '/var/run/scalr.stats-poller.pid'
    
#  monitoring:
#    # should be provided
#    server_url: ''
    
#  script:
#    timeout:
#      # Default value: 180 seconds
#      sync: 180
#      # Default value: 1200 seconds
#      async: 1200

#  phpunit: 
#    # By default all functionl tests are skipped.
#    skip_functional_tests: true
#    # Most of the functional tests require user's environment to handle requests.
#    # value from account_users.id must be provided here
#    userid: 0
#    # client_environments.id must be provided here
#    envid: 0

